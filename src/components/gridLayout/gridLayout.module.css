/* ===== Typography Styles ===== */
h1 {
  color: white;
  font-family: "Ailerons";
  font-size: 2.5rem;
  letter-spacing: 2px;
  text-transform: uppercase;
  border-left: 1rem solid #00fff2;
  margin-top: 1rem;
  padding-left: 1rem;
  text-shadow: 0 0 1rem rgba(0, 255, 242, 0.3);
  overflow: hidden;
  white-space: nowrap;
  animation: typing 3.5s steps(40, end);
}

h1 span {
  color: #00fff2;
  text-shadow: 0 0 5px #00fff2;
  opacity: 0.9;
  font-size: 1.5rem;
}

.futuristic-text {
  color: #00fff2;
  text-shadow: 0 0 5px #00fff2, 0 0 10px rgba(0, 255, 242, 0.5),
    0 0 20px rgba(0, 255, 242, 0.3);
  letter-spacing: 2px;
}

/* ===== Animations ===== */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

/* ===== Layout Container ===== */
.container {
  position: relative;
  width: 100%;
  min-width: 80vw;
  height: 100%;
  min-height: 85vh;
  padding: 0;
  border-radius: 5px;
}

.componentPattern {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(circle, #ffffff7e 1px, transparent 1px);
  background-size: 50px 50px;
  opacity: 0.3;
  z-index: -1;
}

/* ===== HUD Elements ===== */
.hudElement {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.hudElement::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 2px,
    rgba(0, 255, 242, 0.03) 2px,
    rgba(0, 255, 242, 0.03) 4px
  );
  pointer-events: none;
}

.hudPanel {
  border-radius: 1rem;
  height: 100%;
  width: 20%;
  background: linear-gradient(
    135deg,
    transparent 0%,
    #3941446b 50%,
    transparent 100%
  );
  backdrop-filter: blur(0.2rem);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
  padding: 1.5rem;
  transition: all 0.3s ease;
}

.hudPanel:hover {
  background: rgba(34, 38, 40, 0.35);
  box-shadow: 0 8px 32px 0 rgba(0, 255, 242, 0.1);
  border: 1px solid rgba(0, 255, 242, 0.18);
}

.hudElementContent {
  background: rgba(34, 38, 40, 0.25);
  backdrop-filter: blur(0.2rem);
  padding: 1.5rem;
  text-align: center;
  border-left: 1.5rem solid rgba(0, 255, 242, 0.18);
  border-right: 1.5rem solid rgba(0, 255, 242, 0.18);
}

/* ===== Widget Drag Handle ===== */
.dragMe {
  cursor: move;
  background: linear-gradient(90deg, rgba(0, 255, 242, 0.3), transparent);
  padding: 0.75rem 1rem;
  border-radius: 0.5rem 0.5rem 0 0;
  color: #00fff2;
  font-size: 1rem;
  text-align: center;
  user-select: none;
  position: relative;
  overflow: hidden;
}

.dragMe::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 242, 0.1),
    transparent
  );
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

.dragMe:hover::before {
  transform: translateX(100%);
}

/* ===== Widget Content ===== */
.widgetContent {
  flex: 1;
  margin-top: 0.5rem;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border-radius: 0.5rem;
  /* Hide scrollbar for Chrome, Safari and Opera */
  &::-webkit-scrollbar {
    display: none;
  }
  /* Hide scrollbar for IE, Edge and Firefox */
  -ms-overflow-style: none;
  scrollbar-width: none;
}

/* ===== Responsive Styles ===== */
@media only screen and (max-width: 600px) {
  .container {
    width: 100vw;
    padding: 0;
  }

  :global(.react-grid-item > .react-resizable-handle) {
    width: 20px;
    height: 20px;
  }

  :global(.react-grid-item > .react-resizable-handle::after) {
    width: 8px;
    height: 8px;
    right: 3px;
    bottom: 3px;
  }

  .dragMe {
    padding: 0.5rem 0.75rem;
    font-size: 0.9rem;
  }
}

/* ===== React Grid Layout Styles ===== */
:global(.react-grid-layout) {
  position: relative;
  transition: height 200ms ease;
  background: rgba(0, 0, 0, 0.1);
}

:global(.react-grid-item) {
  transition: width 0.1s ease, height 0.1s ease;
  border-radius: 1rem;
  overflow: hidden;
}

/* ===== Grid Item States ===== */
:global(.react-grid-item.react-grid-placeholder) {
  background: rgba(0, 255, 242, 0.1);
  border: 1px dashed rgba(0, 255, 242, 0.3);
  transition-duration: 0.1s;
  z-index: 2;
  border-radius: 4px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

:global(.react-grid-item.react-draggable-dragging) {
  z-index: 100;
  box-shadow: 0 10px 30px rgba(0, 255, 242, 0.2);
  transform: scale(1.02);
  border: 1px solid rgba(0, 255, 242, 0.3);
}

:global(.react-grid-item.react-resizable) {
  position: relative;
}

:global(.react-grid-item.react-resizable.resizing) {
  opacity: 0.9;
  z-index: 1;
  box-shadow: 0 0 20px rgba(0, 255, 242, 0.3);
  border: 1px solid rgba(0, 255, 242, 0.5);
}

/* ===== Resize Handle Styles ===== */
:global(.react-grid-item > .react-resizable-handle) {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 24px;
  height: 24px;
  cursor: se-resize;
  background: linear-gradient(
    135deg,
    transparent 50%,
    rgba(0, 255, 242, 0.1) 50%
  );
  transition: all 0.3s ease;
}

:global(.react-grid-item > .react-resizable-handle::after) {
  content: "";
  position: absolute;
  right: 4px;
  bottom: 4px;
  width: 10px;
  height: 10px;
  border-right: 2px solid rgba(0, 255, 242, 0.8);
  border-bottom: 2px solid rgba(0, 255, 242, 0.8);
  transition: all 0.3s ease;
}

:global(.react-grid-item:hover > .react-resizable-handle) {
  background: linear-gradient(
    135deg,
    transparent 50%,
    rgba(0, 255, 242, 0.2) 50%
  );
}

:global(.react-grid-item:hover > .react-resizable-handle::after) {
  border-right: 2px solid rgba(0, 255, 242, 1);
  border-bottom: 2px solid rgba(0, 255, 242, 1);
  box-shadow: 0 0 8px rgba(0, 255, 242, 0.5);
}
